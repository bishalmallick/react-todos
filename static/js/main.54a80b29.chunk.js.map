{"version":3,"sources":["ToDos.js","App.js","reportWebVitals.js","index.js"],"names":["ToDos","props","useState","active","setActive","listItems","onSelect","id","className","onClick","App","searchFeild","setSearchFeild","list","setList","setArray","prev","removeItem","filter","arr","index","type","placeholder","value","onChange","e","target","autoComplete","onKeyPress","charCode","map","items","class","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAuBeA,EApBD,SAACC,GAEX,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAMQC,EAA4BJ,EAA5BI,UAAWC,EAAiBL,EAAjBK,SAAUC,EAAON,EAAPM,GAC7B,OACI,sBAAKC,UAAU,eAAf,UACI,mBAAGA,UAAU,mBAAmBC,QAAS,WACrCH,EAASC,MAEb,oBAAIC,UAAWL,EAAS,QAAU,KAAlC,SAAyCE,IACzC,mBAAGG,UAAU,sBAAsBC,QAXvB,WAChBL,GAAWD,UCkEJO,MAtEf,WAEE,MAAsCR,mBAAS,IAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAwBV,mBAAS,CAAC,mBAAlC,mBAAOW,EAAP,KAAaC,EAAb,KAEMC,EAAW,WACI,KAAhBJ,GACDG,GAAQ,SAAAE,GAAI,mBAAQA,MACpBJ,EAAe,MAGjBE,GAAQ,SAAAE,GAAI,4BAAQA,GAAR,CAAcL,OAC1BC,EAAe,MAIXK,EAAa,SAACV,GAClBO,GAAQ,SAAAE,GAAI,OAAIA,EAAKE,QAAO,SAACC,EAAKC,GAC9B,OAAOA,IAAUb,SAYvB,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,6CACA,sBAAKA,UAAU,gBAAf,UACE,uBACEa,KAAK,OACLC,YAAY,cACZC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAOb,EAAea,EAAEC,OAAOH,QACzCI,aAAe,KACfC,WAlBa,SAACH,GACJ,KAAfA,EAAEI,UACHd,OAkBI,mBAAGP,UAAU,qBAAqBC,QAASM,OAG7C,qBAAKP,UAAU,gBAAf,SACE,6BACGK,EAAKiB,KAAI,SAACC,EAAOX,GAChB,OAAO,cAAC,EAAD,CACPf,UAAa0B,EAEbxB,GAAIa,EACJd,SAAUW,GAFLG,aAOb,iCACE,oBAAGY,MAAM,eAAT,6CAEA,mBAAGC,KAAK,mCAAmCP,OAAO,SAASQ,IAAI,aAA/D,qCCrDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.54a80b29.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst ToDos = (props) => {\r\n\r\n    const [active, setActive] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        setActive(!active);\r\n    };\r\n\r\n    const { listItems, onSelect, id } = props;\r\n    return(\r\n        <div className=\"list-section\">\r\n            <i className=\"far fa-trash-alt\" onClick={()=>{\r\n                onSelect(id)\r\n            }}></i>\r\n            <li className={active ? \"check\" : null}>{listItems}</li>\r\n            <i className=\"far fa-check-circle\" onClick = {handleClick}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDos;","import './App.css';\nimport { useState } from 'react';\nimport ToDos from './ToDos';\n\nfunction App() {\n\n  const [searchFeild, setSearchFeild] = useState(\"\");\n  const [list, setList] = useState([\"Add Task Above\"]);\n\n  const setArray = () => {\n    if(searchFeild === \"\") {\n      setList(prev => [...prev]);\n      setSearchFeild(\"\");\n    }\n    else {\n    setList(prev => [...prev, searchFeild]);\n    setSearchFeild(\"\");\n    }\n  }\n\n  const removeItem = (id) => {\n    setList(prev => prev.filter((arr, index) => {\n        return index !== id;\n      })\n    )\n  };\n\n  const handleKeyPress = (e) => {\n    if(e.charCode === 13) {\n      setArray();\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <h1>React Todos</h1>\n        <div className=\"input-section\">\n          <input \n            type=\"text\" \n            placeholder=\"Enter Tasks\"\n            value={searchFeild}\n            onChange={(e) => setSearchFeild(e.target.value)}\n            autoComplete = \"on\"\n            onKeyPress={handleKeyPress}>\n          </input>\n          <i className=\"fas fa-plus-circle\" onClick={setArray}></i>\n        </div>\n\n        <div className=\"todos-section\">\n          <ul>\n            {list.map((items, index) => {\n              return <ToDos \n              listItems = {items} \n              key={index} \n              id={index}\n              onSelect={removeItem}/>\n            })}\n          </ul>\n        </div>\n      </div>\n      <footer>\n        <p class=\"footer__text\">\n        Â© 2021 - Website developed by\n        <a href=\"https://github.com/bishalmallick\" target=\"_blank\" rel=\"noreferrer\">\n         Bishal Mallick\n        </a>\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <Com /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}